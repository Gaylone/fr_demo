<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.sonjong.system.dao.IPondsDAO">
    <resultMap id="BaseResultMap" type="top.sonjong.system.domain.POJO.PondsPOJO">
        <id column="pid" property="pid" jdbcType="BIGINT"/>
        <result column="paddress" property="pAddress" jdbcType="VARCHAR"/>
        <result column="psize" property="pSize" jdbcType="VARCHAR"/>
        <result column="ptype" property="pType" jdbcType="VARCHAR"/>
        <result column="p_fid" property="p_fid" jdbcType="BIGINT"/>
        <result column="pname" property="pName" jdbcType="VARCHAR"/>
        <result column="pstatus" property="pStatus" jdbcType="BIGINT"/>
    </resultMap>
    <insert id="addPond" parameterType="top.sonjong.system.domain.POJO.PondsPOJO">
        insert into ponds (paddress,psize,ptype,p_fid,pname)
        values (
                   #{pAddress,jdbcType=VARCHAR},
                   #{pSize,jdbcType=VARCHAR},
                    #{pType,jdbcType=VARCHAR},
                     #{p_fid,jdbcType=BIGINT},
                      #{pName,jdbcType=VARCHAR}
               );
    </insert>
    <update id="updatePondInfo" parameterType="top.sonjong.system.domain.POJO.PondsPOJO">
        update ponds
        <trim prefix="set" suffixOverrides=",">
            <if test="pAddress!=null">paddress=#{pAddress,jdbcType=VARCHAR},</if>
            <if test="pSize!=null">pSize=#{pSize,jdbcType=VARCHAR},</if>
            <if test="pType!=null">pType= #{pType,jdbcType=VARCHAR},</if>
            <if test="p_fid!=null">p_fid=#{p_fid,jdbcType=VARCHAR },</if>
            <if test="pName!=null">pName=#{pName,jdbcType=VARCHAR },</if>
        </trim>
        where pid=#{pid,jdbcType=BIGINT}
    </update>
    <update id="freezePond" parameterType="java.lang.Long">
        update ponds set pstatus=1 where pid=#{pid,jdbcType=BIGINT}
    </update>
    <update id="activePond" parameterType="java.lang.Long">
        update ponds set pstatus=0 where pid=#{pid,jdbcType=BIGINT}
    </update>
    <update id="fillPond" parameterType="java.lang.Long">
        update ponds set pstatus=2 where pid=#{pid,jdbcType=BIGINT}
    </update>
    <select id="countAllPond" resultType="java.lang.Integer">
        select count(*) from ponds where pstatus != 2
    </select>
    <select id="getAllPond" resultMap="BaseResultMap">
        select * from ponds where pstatus != 2  order by pstatus
    </select>
    <select id="findPondByConditions" parameterType="top.sonjong.system.domain.criteria.PondsCriteria"
    resultMap="BaseResultMap">
        select * from ponds where 1=1
        <include refid="sqlConditionBypAddress"/>
        <include refid="sqlConditionBypType"/>
        <include refid="sqlConditionByStatus"/>
        <include refid="sqlConditionBySize"/>
        <include refid="sqlConditionByName"/>
        <include refid="sqlConditionByPid"/>
        <include refid="sqlConditionByPfid"/>
    </select>

    <sql id="sqlConditionBypAddress">
        <if test="null != pAddress and pAddress != ''">and pAddress like CONCAT('%', #{pAddress,jdbcType=VARCHAR}, '%')
        </if>
    </sql>
    <sql id="sqlConditionByPid">
        <if test="null != pid and pid != ''">and pid = #{pid,jdbcType=BIGINT}</if>
    </sql>
    <sql id="sqlConditionBypType">
        <if test="null != pType and pType != ''">and pType = #{pType,jdbcType=VARCHAR}</if>
    </sql>
    <sql id="sqlConditionByStatus">
        <if test="null != pStatus and pStatus != ''">and pStatus = #{pStatus,jdbcType=BIGINT}</if>
    </sql>
    <sql id="sqlConditionBySize">
        <if test="null != minSize and null != maxSize">
            and pSize between  #{minSize,jdbcType=VARCHAR} and #{maxSize,jdbcType=VARCHAR}
        </if>
    </sql>
    <sql id="sqlConditionByName">
        <if test="null != pName and pName != ''">and pname like CONCAT('%', #{pName,jdbcType=VARCHAR}, '%') </if>
    </sql>
    <sql id="sqlConditionByID">
        <if test="null != pid and pid != ''">and pid =#{pid} </if>
    </sql>
    <sql id="sqlConditionByPfid">
        <if test="null != p_fid and p_fid != ''">and p_fid =#{p_fid} </if>
    </sql>
</mapper>
